// This file is auto-generated by @hey-api/openapi-ts

export type ErrorDetail = {
    /**
     * Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'
     */
    location?: string;
    /**
     * Error message text
     */
    message?: string;
    /**
     * The value at the given location
     */
    value?: unknown;
};

export type ErrorModel = {
    /**
     * A human-readable explanation specific to this occurrence of the problem.
     */
    detail?: string;
    /**
     * Optional list of individual error details
     */
    errors?: Array<ErrorDetail> | null;
    /**
     * A URI reference that identifies the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * HTTP status code
     */
    status?: number;
    /**
     * A short, human-readable summary of the problem type. This value should not change between occurrences of the error.
     */
    title?: string;
    /**
     * A URI reference to human-readable documentation for the error.
     */
    type?: string;
};

export type GetUserByIdRow = {
    email: string;
    id: string;
    role: string;
};

export type GetUsersRow = {
    created_at: string;
    email: string;
    id: string;
    role: string;
};

export type LoginInputBody = {
    email: string;
    password: string;
};

export type RegisterInputBody = {
    email: string;
    password: string;
};

export type LoginData = {
    body: LoginInputBody;
    path?: never;
    query?: never;
    url: '/api/auth/login';
};

export type LoginErrors = {
    /**
     * Unauthorized
     */
    401: ErrorModel;
    /**
     * Unprocessable Entity
     */
    422: ErrorModel;
    /**
     * Internal Server Error
     */
    500: ErrorModel;
};

export type LoginError = LoginErrors[keyof LoginErrors];

export type LoginResponses = {
    /**
     * No Content
     */
    204: void;
};

export type LoginResponse = LoginResponses[keyof LoginResponses];

export type LogoutData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/auth/logout';
};

export type LogoutErrors = {
    /**
     * Error
     */
    default: ErrorModel;
};

export type LogoutError = LogoutErrors[keyof LogoutErrors];

export type LogoutResponses = {
    /**
     * No Content
     */
    204: void;
};

export type LogoutResponse = LogoutResponses[keyof LogoutResponses];

export type MeData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/auth/me';
};

export type MeErrors = {
    /**
     * Unauthorized
     */
    401: ErrorModel;
    /**
     * Unprocessable Entity
     */
    422: ErrorModel;
    /**
     * Internal Server Error
     */
    500: ErrorModel;
};

export type MeError = MeErrors[keyof MeErrors];

export type MeResponses = {
    /**
     * OK
     */
    200: GetUserByIdRow;
};

export type MeResponse = MeResponses[keyof MeResponses];

export type RegisterData = {
    body: RegisterInputBody;
    path?: never;
    query?: never;
    url: '/api/auth/register';
};

export type RegisterErrors = {
    /**
     * Error
     */
    default: ErrorModel;
};

export type RegisterError = RegisterErrors[keyof RegisterErrors];

export type RegisterResponses = {
    /**
     * No Content
     */
    204: void;
};

export type RegisterResponse = RegisterResponses[keyof RegisterResponses];

export type VerifyEmailData = {
    body?: never;
    path?: never;
    query?: {
        token?: string;
    };
    url: '/api/auth/verify-email';
};

export type VerifyEmailErrors = {
    /**
     * Unauthorized
     */
    401: ErrorModel;
    /**
     * Unprocessable Entity
     */
    422: ErrorModel;
    /**
     * Internal Server Error
     */
    500: ErrorModel;
};

export type VerifyEmailError = VerifyEmailErrors[keyof VerifyEmailErrors];

export type VerifyEmailResponses = {
    /**
     * No Content
     */
    204: void;
};

export type VerifyEmailResponse = VerifyEmailResponses[keyof VerifyEmailResponses];

export type GetAllUsersData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/users';
};

export type GetAllUsersErrors = {
    /**
     * Error
     */
    default: ErrorModel;
};

export type GetAllUsersError = GetAllUsersErrors[keyof GetAllUsersErrors];

export type GetAllUsersResponses = {
    /**
     * OK
     */
    200: Array<GetUsersRow> | null;
};

export type GetAllUsersResponse = GetAllUsersResponses[keyof GetAllUsersResponses];

export type DeleteUserData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/users/{id}';
};

export type DeleteUserErrors = {
    /**
     * Error
     */
    default: ErrorModel;
};

export type DeleteUserError = DeleteUserErrors[keyof DeleteUserErrors];

export type DeleteUserResponses = {
    /**
     * No Content
     */
    204: void;
};

export type DeleteUserResponse = DeleteUserResponses[keyof DeleteUserResponses];